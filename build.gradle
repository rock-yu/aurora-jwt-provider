plugins {
    id "org.jetbrains.kotlin.jvm" version "1.6.21"
    id 'java-library'
    id "org.jmailen.kotlinter" version "3.3.0"
    id 'idea'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.11
targetCompatibility = 1.11

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict', "-Xallow-result-return-type"]
        jvmTarget = '11'
    }
}

compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '11'
    }
}

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

jar {
    enabled = true
}

dependencies {
    implementation 'com.nimbusds:nimbus-jose-jwt:8.4'

    implementation platform('org.jetbrains.kotlin:kotlin-bom')
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

    implementation 'com.fasterxml.jackson.core:jackson-core:2.11.3'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.11.3'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testImplementation 'org.mockito:mockito-core:3.3.3'
    testImplementation 'org.mockito:mockito-junit-jupiter:3.3.3'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}

test {
    useJUnitPlatform()
}

apply from: "${rootDir}/config/quality.gradle"

apply plugin: 'maven-publish'

publishing {
    publications {
        maven(MavenPublication) {
            groupId 'aurora.search'
            artifactId jar.baseName
            from components.java
        }
        all {
            pom.withXml {
                asNode().dependencies.'*'.findAll() {
                    it.scope.text() == 'runtime' && project.configurations.compile.allDependencies.find { dep ->
                        dep.name == it.artifactId.text() || dep.name.replace("/", "-") == it.artifactId.text()
                    }
                }.each { it.scope*.value = 'compile' }
            }
        }
    }
}
